[{"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\index.js":"1","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\AddTaskForm\\AddTaskForm.jsx":"2","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\services\\authservice.js":"3","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\AddTask\\AddTask.jsx":"4","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\App\\App.jsx":"5","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\TasksPage\\TasksPage.jsx":"6","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\Login\\Login.jsx":"7","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\Register\\Register.jsx":"8","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\services\\tasksservice.js":"9","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\UserTaskItem\\UserTaskItem.jsx":"10","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\NavBar\\NavBar.jsx":"11"},{"size":291,"mtime":1606656254292,"results":"12","hashOfConfig":"13"},{"size":4897,"mtime":1606771794042,"results":"14","hashOfConfig":"13"},{"size":1273,"mtime":1606681108655,"results":"15","hashOfConfig":"13"},{"size":1278,"mtime":1606816151928,"results":"16","hashOfConfig":"13"},{"size":587,"mtime":1606671982831,"results":"17","hashOfConfig":"13"},{"size":3041,"mtime":1606822288761,"results":"18","hashOfConfig":"13"},{"size":4779,"mtime":1606823682211,"results":"19","hashOfConfig":"13"},{"size":5510,"mtime":1606823679685,"results":"20","hashOfConfig":"13"},{"size":1137,"mtime":1606817568601,"results":"21","hashOfConfig":"13"},{"size":3759,"mtime":1606820912138,"results":"22","hashOfConfig":"13"},{"size":2204,"mtime":1606684172949,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"pzgbog",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\index.js",[],["52","53"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\AddTaskForm\\AddTaskForm.jsx",["54"],"﻿import React, { useState,useRef} from 'react';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport TaskService from \"../../services/tasksservice\"\r\nimport './AddTaskForm.scss';\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Это поле обязательно!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst AddTaskForm = () => {\r\n\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n    const [taskName, setTaskName] = useState('');\r\n    const [taskTime, setTaskTime] = useState(25);\r\n    const [taskDescription, setTaskDescription] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeTaskName=((e) => {\r\n        setTaskName(e.target.value);\r\n    });\r\n\r\n    const onChangeTaskTime =((e) => {\r\n        setTaskTime(e.target.value);\r\n    });\r\n\r\n    const onChangeTaskDescription = ((e) => {\r\n        setTaskDescription(e.target.value);\r\n    });\r\n       \r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n      \r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            let testmessage = \"\";\r\n            setLoading(true);\r\n            TaskService.AddTask(taskName, taskTime, taskDescription).then(\r\n                () => {\r\n                    window.location.reload();\r\n                    setLoading(false);\r\n                },\r\n                (error) => {\r\n                    console.debug(error.response);\r\n                    testmessage = error.toString();\r\n                    setLoading(false);\r\n                });\r\n\r\n            setMessage(testmessage);\r\n        }\r\n        else {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const onCloseButtonClick = (e) => {\r\n    document.getElementById('addForm').style.cssText = 'display:none';\r\n    let addbtns = [null];\r\n    addbtns = Array.from(document.getElementsByClassName('btn-lg'));\r\n    addbtns.forEach(i => i.style.cssText = \"display:inline-flex\");\r\n\r\n    document.getElementById('UserTasks').style.cssText = \"display:block\";     // Скрываем список задач\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return <div id=\"addForm\">\r\n        <i className=\"fas fa-times fa-lg closeButton \" onClick={onCloseButtonClick}></i>\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"taskName\">Название</label>\r\n                <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"taskName\"\r\n                    value={taskName}\r\n                    onChange={onChangeTaskName}\r\n                    validations={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"taskTime\">Примерное время на задачу</label>\r\n                <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"taskTime\"\r\n                    value={taskTime}\r\n                    onChange={onChangeTaskTime}\r\n                    validations={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"taskDescription\">Описание</label>\r\n                <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"необязательно\"\r\n                    name=\"taskDescription\"\r\n                    value={taskDescription}\r\n                    onChange={onChangeTaskDescription}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n                  \r\n                    <span>Добавить задачу</span>\r\n                </button>\r\n                {loading && (\r\n                    <div className=\"loading-container\">\r\n                        <div className=\"yellow\"></div>\r\n                        <div className=\"red\"></div>\r\n                        <div className=\"blue\"></div>\r\n                        <div className=\"violet\"></div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {message && (\r\n                <div className=\"form-group\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        {message}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n\r\n\r\n        </div>\r\n\r\n\r\n}\r\n\r\nexport default AddTaskForm;","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\services\\authservice.js",["55","56"],"﻿import axios from \"axios\";\r\n\r\nconst url = \"/account\"\r\n\r\n\r\n\r\nconst register = (email, firstName, password) => {\r\n    let lastName ='не используется'\r\n    return axios.post(url + '/signup', {\r\n        email,\r\n        password,\r\n        firstName,\r\n        lastName\r\n    }\r\n    ).then((respone) => {\r\n        if (respone.data.token) {\r\n            localStorage.setItem('user', JSON.stringify(respone.data));\r\n        }\r\n\r\n        return respone.data;\r\n\r\n\r\n       \r\n    });\r\n    \r\n};\r\n\r\nconst login = (email, password) => {\r\n\r\n\r\n    return axios.post(url + '/signin', {\r\n        email,\r\n        password\r\n    }\r\n    ).then((respone) => {\r\n        if (respone.data.token) {\r\n            localStorage.setItem('user', JSON.stringify(respone.data));\r\n        }\r\n\r\n\r\n        return respone.data;\r\n    })\r\n    \r\n\r\n};\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem('user');\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n};\r\n\r\nconst getAuthToken = ()=>{\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user && user.token) {\r\n        return (user.token);\r\n    }\r\n    else return {};\r\n}\r\n\r\nexport default {\r\n    login,\r\n    register,\r\n    logout,\r\n    getCurrentUser,\r\n    getAuthToken\r\n}\r\n\r\n",["57","58"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\AddTask\\AddTask.jsx",["59","60","61"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\App\\App.jsx",["62","63"],"﻿import React from 'react';\r\nimport TasksPage from '../TasksPage/TasksPage';\r\nimport Login from '../Login/Login'\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport Register from '../Register/Register';\r\nimport NavBar from '../NavBar/NavBar';\r\n const App = () => {\r\n     return <div>\r\n         <NavBar/>\r\n          <Switch>\r\n             <Route path=\"/tasks\" component={TasksPage} />\r\n             <Route exact path=\"/signup\" component={Register} />\r\n             <Route exact path=\"/login\" component={Login} />\r\n         </Switch>\r\n         </div>\r\n}\r\nexport default App;",["64","65"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\TasksPage\\TasksPage.jsx",["66"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\Login\\Login.jsx",["67"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\Register\\Register.jsx",["68","69"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\services\\tasksservice.js",["70"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\UserTaskItem\\UserTaskItem.jsx",["71"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\NavBar\\NavBar.jsx",["72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":1,"nodeType":"79","messageId":"80","fix":"81"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":1,"nodeType":"79","messageId":"80","fix":"82"},{"ruleId":"83","severity":1,"message":"84","line":64,"column":1,"nodeType":"85","endLine":70,"endColumn":2},{"ruleId":"73","replacedBy":"86"},{"ruleId":"75","replacedBy":"87"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":1,"nodeType":"79","messageId":"80","fix":"88"},{"ruleId":"89","severity":1,"message":"90","line":3,"column":8,"nodeType":"91","messageId":"92","endLine":3,"endColumn":19},{"ruleId":"89","severity":1,"message":"93","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":1,"column":1,"nodeType":"79","messageId":"80","fix":"94"},{"ruleId":"89","severity":1,"message":"95","line":4,"column":25,"nodeType":"91","messageId":"92","endLine":4,"endColumn":29},{"ruleId":"73","replacedBy":"96"},{"ruleId":"75","replacedBy":"97"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":1,"nodeType":"79","messageId":"80","fix":"98"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":1,"nodeType":"79","messageId":"80","fix":"99"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":1,"nodeType":"79","messageId":"80","fix":"100"},{"ruleId":"89","severity":1,"message":"101","line":7,"column":10,"nodeType":"91","messageId":"92","endLine":7,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":53,"column":1,"nodeType":"85","endLine":58,"endColumn":2},{"ruleId":"77","severity":1,"message":"78","line":1,"column":1,"nodeType":"79","messageId":"80","fix":"102"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":1,"nodeType":"79","messageId":"80","fix":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"106","text":"107"},{"range":"108","text":"107"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["104"],["105"],{"range":"109","text":"107"},"no-unused-vars","'AuthService' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",{"range":"110","text":"107"},"'Link' is defined but never used.",["104"],["105"],{"range":"111","text":"107"},{"range":"112","text":"107"},{"range":"113","text":"107"},"'Redirect' is defined but never used.",{"range":"114","text":"107"},{"range":"115","text":"107"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]