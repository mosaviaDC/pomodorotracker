[{"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\App\\App.jsx":"1","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\Register\\Register.jsx":"2","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\Home\\Home.jsx":"3","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\index.js":"4","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\ForgotPassword\\ForgotPassword.jsx":"5","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\NavBar\\NavBar.jsx":"6","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\services\\authservice.js":"7","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\services\\tasksservice.js":"8","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AppSendEmail\\AppSendEmail.jsx":"9","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\TasksPage\\TasksPage.jsx":"10","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AddTask\\AddTask.jsx":"11","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AddTaskForm\\AddTaskForm.jsx":"12","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AppFallBack\\AppFallBack.jsx":"13","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\Login\\Login.jsx":"14"},{"size":1081,"mtime":1611433480828,"results":"15","hashOfConfig":"16"},{"size":5464,"mtime":1611419358317,"results":"17","hashOfConfig":"16"},{"size":4377,"mtime":1610719963703,"results":"18","hashOfConfig":"16"},{"size":302,"mtime":1610719963711,"results":"19","hashOfConfig":"16"},{"size":3494,"mtime":1611433476311,"results":"20","hashOfConfig":"16"},{"size":2269,"mtime":1610719963703,"results":"21","hashOfConfig":"16"},{"size":1521,"mtime":1611422261603,"results":"22","hashOfConfig":"16"},{"size":1180,"mtime":1610719963711,"results":"23","hashOfConfig":"16"},{"size":299,"mtime":1611433767978,"results":"24","hashOfConfig":"16"},{"size":4389,"mtime":1611337034661,"results":"25","hashOfConfig":"16"},{"size":1278,"mtime":1610719963703,"results":"26","hashOfConfig":"16"},{"size":4978,"mtime":1610719963703,"results":"27","hashOfConfig":"16"},{"size":682,"mtime":1611336814519,"results":"28","hashOfConfig":"16"},{"size":4859,"mtime":1611433816207,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"gxlw5a",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\App\\App.jsx",["65"],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\Register\\Register.jsx",["66"],"﻿import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../../services/authservice\";\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Это поле обязательно!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Register = (props) => {\r\n    document.title = \"Регистрация\"\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    };\r\n    const onChangeFirstName = (e) => {\r\n        const firstName = e.target.value;\r\n        setFirstName(firstName);\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n    };\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        setMessage(\"\");\r\n        setLoading(true);\r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            AuthService.register(username,firstName,password).then(\r\n                () => {\r\n\r\n                    props.history.push(\"/tasks\");\r\n                    window.location.reload();\r\n        \r\n                },\r\n                (error) => {\r\n                    let resMessage = ''\r\n                    if (error.response.status === 409) {\r\n                        resMessage = \"Ошибка 409: такой e-mail уже найден\";\r\n                    }\r\n                    else if (error.response.status === 500) {\r\n                        resMessage = \"Ошибка 500: проверьте интернет\";\r\n                    }\r\n                    else if (error.response.status === 400) {\r\n                        resMessage = \"Ошибка 400: форма заполнена неверно\";\r\n                    }\r\n\r\n                    else resMessage = error.toString();\r\n                    setLoading(false);\r\n                    setMessage(resMessage);\r\n                }\r\n            );\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n\r\n\r\n                <Form onSubmit={handleLogin} ref={form}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Email</label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={onChangeUsername}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Имя</label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={firstName}\r\n                            onChange={onChangeFirstName}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Пароль</label>\r\n                        <Input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={onChangePassword}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary\" disabled={loading}>\r\n                            {loading && (\r\n                                <div className=\"loading-container\">\r\n                                    <div className=\"yellow\"></div>\r\n                                    <div className=\"red\"></div>\r\n                                    <div className=\"blue\"></div>\r\n                                    <div className=\"violet\"></div>\r\n                                </div>   \r\n                            )}\r\n                            <span>Регистрация</span>\r\n                        </button>\r\n                    </div>\r\n\r\n                    {message && (\r\n                        <div className=\"form-group\">\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n",["67","68"],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\Home\\Home.jsx",["69"],"﻿import React from 'react';\r\nimport './Home.scss';\r\nimport Student from '../../assets/img/student.svg';\r\nimport Woman from '../../assets/img/woman.svg';\r\nimport WorkPanel from '../../assets/img/workpanel.svg';\r\nimport LikeMan from '../../assets/img/likeman.svg';\r\n\r\n\r\nconst Home = () => {\r\n    return <div>     \r\n        <div className=\"text-xs-center homeMainBlock block\">\r\n            <h1> Что это такое? </h1>\r\n            <p>В современном мире с каждым днем становится все больше задач. Отличный интсрумент тайм-менеджмента - метод pomodoro</p>\r\n            <img src={Student} className=\"img-rounded homeMainImg\" alt=\"...\" />\r\n\r\n            <h4>Это приложение поможет правильно использовать технику помидора, посдкажет время, когда лучше сделать перерыв, или сконцентрироваться над задачей  </h4>\r\n            <a href='/tasks'> Перейти к задачам! </a>\r\n        </div>\r\n\r\n        <div className=\"text-xs-center homeMainBlock block\">\r\n            <h1> Как работать с этой техникой? </h1>\r\n            <p>Суть техники помидора — в таймере на определенное время. Пока таймер ведёт обтратный отсчет, нужно сконцентрироваться на задаче и не отвлекаться на другие дела. Классически, это 25 минут, после этого — перерыв в 5 минут</p>\r\n            <p>Создайте задачу, указав количество минут, которые можно на нее потратить. Запустите таймер</p>\r\n            <img src={Woman} className=\"img-rounded homeMainImg\" alt=\"...\" />\r\n\r\n            <h4>Приложение само разобьет задачу на временные промежутки, напомнит о перерыве или старте нового периода</h4>\r\n            <a href='/tasks'> Начать! </a>\r\n        </div>\r\n\r\n        <div className=\"text-xs-center homeMainBlock block\">\r\n            <h1> Советы при работе! </h1>\r\n            <li>Ставьте конкретные задачи. Лучше, если они записаны и видны перед глазами </li>\r\n            <li>Задачи можно хранить прямо здесь </li>\r\n            <li>Подключите уведомления в телеграмм, это очень удобно </li>\r\n            <img src={WorkPanel} className=\"img-rounded homeMainImg right\" alt=\"...\" />\r\n           \r\n            <li> Не забывайте отдыхать - это главная ошибка при работе с техникой помидора </li>\r\n            <li> Если что-то пошло не по плану, помидор можно поставить на паузу </li>\r\n            <li> Создав задачу, не забудьте ее запустить </li>\r\n              <h4> Приложение можно использовать и как простой ToDo лист</h4>\r\n            <a href='/tasks'> Создать свою первую задачу! </a>\r\n        </div>\r\n\r\n        <div className=\"text-xs-center homeMainBlock block\">\r\n            <h1>Это эффективно! </h1>\r\n            <h4><i className=\"fas fa-lightbulb\"/> абсолютно бесплатно </h4>\r\n            <p>Попробуйте использовать технику в течение дня. Результат будет впечатляющий!</p>\r\n            <img src={LikeMan} className=\"img-rounded homeMainImg right\" alt=\"...\" />\r\n            <h4> Главное  — это соблюдение таймера, приложение отлично поможет справиться с этим.</h4>\r\n\r\n           \r\n            <a href='/tasks'>Попробовать технику помидора</a>\r\n        </div>\r\n\r\n        <div className=\"footer\">\r\n            <p> © Denis Cherniy 2020  </p>\r\n             <p>  mosavia.dc@gmail.com </p>\r\n        </div>\r\n        \r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Home;",["70","71"],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\index.js",[],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\ForgotPassword\\ForgotPassword.jsx",[],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\NavBar\\NavBar.jsx",["72","73"],"﻿import React, { useState, useEffect } from \"react\";\r\nimport AuthService from '../../services/authservice'\r\nimport TaskPage from '../TasksPage/TasksPage'\r\nimport { Link } from 'react-router-dom';\r\nimport './NavBar.scss';\r\nconst NavBar = () => {\r\n    const [currentUser, setCurrentUser] = useState(undefined);\r\n    useEffect(() => {\r\n        const user = AuthService.getCurrentUser();\r\n\r\n        if (user) {\r\n            setCurrentUser(user);\r\n        }\r\n    }, []);\r\n\r\n    const logOut =()=>{\r\n        AuthService.logout();\r\n        window.location.reload();\r\n    }\r\n\r\n    return <div>\r\n        <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n            <Link to={\"/\"} className=\"navbar-brand\">\r\n                Помидор\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n              \r\n\r\n              \r\n\r\n               \r\n\r\n             \r\n\r\n            {currentUser ? (\r\n                <div className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                            <Link to={\"/tasks\"} id =\"userName\" className=\"nav-link\">\r\n                               {currentUser.firstName}\r\n                        </Link>\r\n                        </li>\r\n                   \r\n\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link to={\"/signin\"} id=\"userName\" className=\"nav-link\" onClick={logOut}>\r\n                                Выйти\r\n                            </Link>\r\n                         \r\n \r\n                    </li>\r\n                </div>\r\n                ) :\r\n                (\r\n                    <div className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to={\"/signin\"} className=\"nav-link\">\r\n                              Войти\r\n              </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link to={\"/signup\"} className=\"nav-link\">\r\n                                Регистрация\r\n                        </Link>\r\n                        </li>\r\n                    </div>\r\n                )}\r\n      \r\n            </div>\r\n         </nav>  \r\n    </div>\r\n     \r\n\r\n}\r\nexport default NavBar;","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\services\\authservice.js",["74","75"],"﻿import axios from \"axios\";\r\n\r\nconst url = \"https://pomodorotodotracker.herokuapp.com/account\";\r\n\r\n\r\n\r\nconst register = (email, firstName, password) => {\r\n    let lastName ='не используется'\r\n    return axios.post(url + '/signup', {\r\n        email,\r\n        password,\r\n        firstName,\r\n        lastName\r\n    }\r\n    ).then((respone) => {\r\n        if (respone.data.token) {\r\n            localStorage.setItem('user', JSON.stringify(respone.data));\r\n        }\r\n\r\n        return respone.data;\r\n\r\n\r\n       \r\n    });\r\n    \r\n};\r\n\r\nconst login = (email, password) => {\r\n\r\n\r\n    return axios.post(url + '/signin', {\r\n    email,\r\n    password\r\n}\r\n).then((respone) => {\r\n    console.log(respone);\r\n    if (respone.data.token) {\r\n        localStorage.setItem('user', JSON.stringify(respone.data));\r\n    }\r\n\r\n\r\n    return respone.data;\r\n});\r\n\r\n};\r\n\r\nconst logout = () => {\r\n    localStorage.removeItem('user');\r\n};\r\n\r\nconst getCurrentUser = () => {\r\n    return JSON.parse(localStorage.getItem('user'));\r\n};\r\n\r\nconst sendEmail = (Email) =>{\r\nreturn axios.post(url + '/forgot', {\r\n        Email,\r\n    }\r\n    ).then((respone) => {\r\n        console.log(respone);\r\n        return respone.data;\r\n    });\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\nconst getAuthToken = ()=>{\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user && user.token) {\r\n        return (user.token);\r\n    }\r\n    else return {};\r\n}\r\n\r\nexport default {\r\n    login,\r\n    register,\r\n    logout,\r\n    getCurrentUser,\r\n    getAuthToken,\r\n    sendEmail\r\n}\r\n\r\n","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\services\\tasksservice.js",["76"],"import axios from 'axios';\r\nimport AuthService from './authservice'\r\n\r\nconst backurl = \"https://pomodorotodotracker.herokuapp.com/tasks\";\r\nconst headers = {\r\n    \"Authorization\": \"Bearer \" + AuthService.getAuthToken(),\r\n    'Content-Type': 'application/json'\r\n}\r\n\r\nconst GetTasks = () => {\r\n\r\n\r\n    return axios.get(backurl, {\r\n        headers: headers\r\n    }).then((response) => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\nconst UpdateTaskStatus = (task) => {\r\n    return axios.put(backurl +'/updatestatus', task,{\r\n        headers: headers,\r\n       \r\n    });\r\n}\r\n\r\nconst DeleteTask = (id) => {                       \r\n \r\n    return axios.delete(backurl + '/delete/' + id, {\r\n        headers: headers\r\n    });\r\n}\r\n\r\n\r\n\r\nconst AddTask = (taskName, taskTime, taskDescription = '��� ��������') => {\r\n\r\n    const task = {\r\n        taskName: taskName,\r\n        taskTime: taskTime,\r\n        taskDescription: taskDescription\r\n    }\r\n    return axios.post(backurl + '/addtask', task,{\r\n       headers:headers\r\n  \r\n\r\n    }).then((response) => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n\r\nexport default {\r\n    GetTasks,\r\n    AddTask,\r\n    DeleteTask,\r\n    UpdateTaskStatus\r\n}\r\n","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AppSendEmail\\AppSendEmail.jsx",[],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\TasksPage\\TasksPage.jsx",["77"],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AddTask\\AddTask.jsx",["78","79","80"],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AddTaskForm\\AddTaskForm.jsx",["81"],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AppFallBack\\AppFallBack.jsx",["82"],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\Login\\Login.jsx",["83"],{"ruleId":"84","severity":1,"message":"85","line":1,"column":1,"nodeType":"86","messageId":"87","fix":"88"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":1,"nodeType":"86","messageId":"87","fix":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":1,"nodeType":"86","messageId":"87","fix":"94"},{"ruleId":"90","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":1,"nodeType":"86","messageId":"87","fix":"97"},{"ruleId":"98","severity":1,"message":"99","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":1,"column":1,"nodeType":"86","messageId":"87","fix":"102"},{"ruleId":"103","severity":1,"message":"104","line":79,"column":1,"nodeType":"105","endLine":86,"endColumn":2},{"ruleId":"103","severity":1,"message":"104","line":53,"column":1,"nodeType":"105","endLine":58,"endColumn":2},{"ruleId":"84","severity":1,"message":"85","line":1,"column":1,"nodeType":"86","messageId":"87","fix":"106"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":1,"nodeType":"86","messageId":"87","fix":"107"},{"ruleId":"98","severity":1,"message":"108","line":3,"column":8,"nodeType":"100","messageId":"101","endLine":3,"endColumn":19},{"ruleId":"98","severity":1,"message":"109","line":4,"column":10,"nodeType":"100","messageId":"101","endLine":4,"endColumn":18},{"ruleId":"84","severity":1,"message":"85","line":1,"column":1,"nodeType":"86","messageId":"87","fix":"110"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":1,"nodeType":"86","messageId":"87","fix":"111"},{"ruleId":"84","severity":1,"message":"85","line":1,"column":1,"nodeType":"86","messageId":"87","fix":"112"},"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"113","text":"114"},{"range":"115","text":"114"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],{"range":"118","text":"114"},["116"],["117"],{"range":"119","text":"114"},"no-unused-vars","'TaskPage' is defined but never used.","Identifier","unusedVar",{"range":"120","text":"114"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"range":"121","text":"114"},{"range":"122","text":"114"},"'AuthService' is defined but never used.","'useState' is defined but never used.",{"range":"123","text":"114"},{"range":"124","text":"114"},{"range":"125","text":"114"},[-1,0],"",[-1,0],"no-global-assign","no-unsafe-negation",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]