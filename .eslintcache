[{"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\index.js":"1","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\AddTaskForm\\AddTaskForm.jsx":"2","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\services\\authservice.js":"3","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\AddTask\\AddTask.jsx":"4","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\App\\App.jsx":"5","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\TasksPage\\TasksPage.jsx":"6","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\Login\\Login.jsx":"7","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\Register\\Register.jsx":"8","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\services\\tasksservice.js":"9","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\UserTaskItem\\UserTaskItem.jsx":"10","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\NavBar\\NavBar.jsx":"11"},{"size":291,"mtime":1606656254292,"results":"12","hashOfConfig":"13"},{"size":4897,"mtime":1606771794042,"results":"14","hashOfConfig":"13"},{"size":1314,"mtime":1606829977145,"results":"15","hashOfConfig":"13"},{"size":1278,"mtime":1606816151928,"results":"16","hashOfConfig":"13"},{"size":587,"mtime":1606671982831,"results":"17","hashOfConfig":"13"},{"size":3041,"mtime":1606822288761,"results":"18","hashOfConfig":"13"},{"size":4788,"mtime":1606829915415,"results":"19","hashOfConfig":"13"},{"size":5510,"mtime":1606823679685,"results":"20","hashOfConfig":"13"},{"size":1137,"mtime":1606817568601,"results":"21","hashOfConfig":"13"},{"size":3759,"mtime":1606820912138,"results":"22","hashOfConfig":"13"},{"size":2204,"mtime":1606684172949,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"pzgbog",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\index.js",[],["51","52"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\AddTaskForm\\AddTaskForm.jsx",["53"],"﻿import React, { useState,useRef} from 'react';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport TaskService from \"../../services/tasksservice\"\r\nimport './AddTaskForm.scss';\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Это поле обязательно!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst AddTaskForm = () => {\r\n\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n    const [taskName, setTaskName] = useState('');\r\n    const [taskTime, setTaskTime] = useState(25);\r\n    const [taskDescription, setTaskDescription] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeTaskName=((e) => {\r\n        setTaskName(e.target.value);\r\n    });\r\n\r\n    const onChangeTaskTime =((e) => {\r\n        setTaskTime(e.target.value);\r\n    });\r\n\r\n    const onChangeTaskDescription = ((e) => {\r\n        setTaskDescription(e.target.value);\r\n    });\r\n       \r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n      \r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            let testmessage = \"\";\r\n            setLoading(true);\r\n            TaskService.AddTask(taskName, taskTime, taskDescription).then(\r\n                () => {\r\n                    window.location.reload();\r\n                    setLoading(false);\r\n                },\r\n                (error) => {\r\n                    console.debug(error.response);\r\n                    testmessage = error.toString();\r\n                    setLoading(false);\r\n                });\r\n\r\n            setMessage(testmessage);\r\n        }\r\n        else {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const onCloseButtonClick = (e) => {\r\n    document.getElementById('addForm').style.cssText = 'display:none';\r\n    let addbtns = [null];\r\n    addbtns = Array.from(document.getElementsByClassName('btn-lg'));\r\n    addbtns.forEach(i => i.style.cssText = \"display:inline-flex\");\r\n\r\n    document.getElementById('UserTasks').style.cssText = \"display:block\";     // Скрываем список задач\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return <div id=\"addForm\">\r\n        <i className=\"fas fa-times fa-lg closeButton \" onClick={onCloseButtonClick}></i>\r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"taskName\">Название</label>\r\n                <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"taskName\"\r\n                    value={taskName}\r\n                    onChange={onChangeTaskName}\r\n                    validations={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"taskTime\">Примерное время на задачу</label>\r\n                <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"taskTime\"\r\n                    value={taskTime}\r\n                    onChange={onChangeTaskTime}\r\n                    validations={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"taskDescription\">Описание</label>\r\n                <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"необязательно\"\r\n                    name=\"taskDescription\"\r\n                    value={taskDescription}\r\n                    onChange={onChangeTaskDescription}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n                  \r\n                    <span>Добавить задачу</span>\r\n                </button>\r\n                {loading && (\r\n                    <div className=\"loading-container\">\r\n                        <div className=\"yellow\"></div>\r\n                        <div className=\"red\"></div>\r\n                        <div className=\"blue\"></div>\r\n                        <div className=\"violet\"></div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {message && (\r\n                <div className=\"form-group\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        {message}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n\r\n\r\n        </div>\r\n\r\n\r\n}\r\n\r\nexport default AddTaskForm;","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\services\\authservice.js",["54","55"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\AddTask\\AddTask.jsx",["56","57","58"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\App\\App.jsx",["59","60"],"﻿import React from 'react';\r\nimport TasksPage from '../TasksPage/TasksPage';\r\nimport Login from '../Login/Login'\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport Register from '../Register/Register';\r\nimport NavBar from '../NavBar/NavBar';\r\n const App = () => {\r\n     return <div>\r\n         <NavBar/>\r\n          <Switch>\r\n             <Route path=\"/tasks\" component={TasksPage} />\r\n             <Route exact path=\"/signup\" component={Register} />\r\n             <Route exact path=\"/login\" component={Login} />\r\n         </Switch>\r\n         </div>\r\n}\r\nexport default App;",["61","62"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\TasksPage\\TasksPage.jsx",["63"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\Login\\Login.jsx",["64"],"﻿import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport './Login.scss';\r\nimport AuthService from \"../../services/authservice\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Это поле обязательно!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Login = (props) => {\r\n    document.title = \"Войти\"\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    };\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n    };\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        setMessage(\"\");\r\n        setLoading(true);\r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            AuthService.login(username, password).then(\r\n                () => {\r\n\r\n                    props.history.push(\"/tasks\");\r\n                    window.location.reload();\r\n                },\r\n                (error) => {\r\n                    console.log(error.response);\r\n                    let resMessage = ''\r\n                    if (error.response.status === 404) {\r\n                        resMessage = \"Ошибка 404: e-mail не найден\";\r\n                    }\r\n                    else if (error.response.status === 500) {\r\n                        resMessage = \"Ошибка 500: проверьте интернет\";\r\n                    }\r\n                    else if (error.response.status === 400) {\r\n                        resMessage = \"Ошибка 400: неверный пароль\";\r\n                    }\r\n\r\n                    else resMessage = error.toString();\r\n                    setLoading(false);\r\n                    setMessage(resMessage);\r\n                }\r\n            );\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n\r\n\r\n                <Form onSubmit={handleLogin} ref={form}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Email</label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={onChangeUsername}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Пароль</label>\r\n                        <Input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={onChangePassword}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n                            {loading && (\r\n                                <div className=\"loading-container\">\r\n                                    <div className=\"yellow\"></div>\r\n                                    <div className=\"red\"></div>\r\n                                    <div className=\"blue\"></div>\r\n                                    <div className=\"violet\"></div>\r\n                                </div>   \r\n                            )}\r\n                            <span>Войти</span>\r\n                        </button>\r\n                    </div>\r\n\r\n                    {message && (\r\n                        <div className=\"form-group\">\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\Register\\Register.jsx",["65","66"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\services\\tasksservice.js",["67"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\UserTaskItem\\UserTaskItem.jsx",["68"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\NavBar\\NavBar.jsx",["69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":1,"nodeType":"76","messageId":"77","fix":"78"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":1,"nodeType":"76","messageId":"77","fix":"79"},{"ruleId":"80","severity":1,"message":"81","line":64,"column":1,"nodeType":"82","endLine":70,"endColumn":2},{"ruleId":"74","severity":1,"message":"75","line":1,"column":1,"nodeType":"76","messageId":"77","fix":"83"},{"ruleId":"84","severity":1,"message":"85","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":19},{"ruleId":"84","severity":1,"message":"88","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":18},{"ruleId":"74","severity":1,"message":"75","line":1,"column":1,"nodeType":"76","messageId":"77","fix":"89"},{"ruleId":"84","severity":1,"message":"90","line":4,"column":25,"nodeType":"86","messageId":"87","endLine":4,"endColumn":29},{"ruleId":"70","replacedBy":"91"},{"ruleId":"72","replacedBy":"92"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":1,"nodeType":"76","messageId":"77","fix":"93"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":1,"nodeType":"76","messageId":"77","fix":"94"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":1,"nodeType":"76","messageId":"77","fix":"95"},{"ruleId":"84","severity":1,"message":"96","line":7,"column":10,"nodeType":"86","messageId":"87","endLine":7,"endColumn":18},{"ruleId":"80","severity":1,"message":"81","line":53,"column":1,"nodeType":"82","endLine":58,"endColumn":2},{"ruleId":"74","severity":1,"message":"75","line":1,"column":1,"nodeType":"76","messageId":"77","fix":"97"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":1,"nodeType":"76","messageId":"77","fix":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"101","text":"102"},{"range":"103","text":"102"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"range":"104","text":"102"},"no-unused-vars","'AuthService' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",{"range":"105","text":"102"},"'Link' is defined but never used.",["99"],["100"],{"range":"106","text":"102"},{"range":"107","text":"102"},{"range":"108","text":"102"},"'Redirect' is defined but never used.",{"range":"109","text":"102"},{"range":"110","text":"102"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]