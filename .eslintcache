[{"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\App\\App.jsx":"1","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\Register\\Register.jsx":"2","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\Home\\Home.jsx":"3","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\index.js":"4","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\ForgotPassword\\ForgotPassword.jsx":"5","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\NavBar\\NavBar.jsx":"6","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\services\\authservice.js":"7","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\services\\tasksservice.js":"8","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AppSendEmail\\AppSendEmail.jsx":"9","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\TasksPage\\TasksPage.jsx":"10","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AddTask\\AddTask.jsx":"11","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AddTaskForm\\AddTaskForm.jsx":"12","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AppFallBack\\AppFallBack.jsx":"13","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\Login\\Login.jsx":"14","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\ResetPassword\\ResetPassword.jsx":"15"},{"size":1241,"mtime":1611576312779,"results":"16","hashOfConfig":"17"},{"size":6398,"mtime":1611576846963,"results":"18","hashOfConfig":"17"},{"size":4377,"mtime":1610719963703,"results":"19","hashOfConfig":"17"},{"size":302,"mtime":1610719963711,"results":"20","hashOfConfig":"17"},{"size":3502,"mtime":1611563799037,"results":"21","hashOfConfig":"17"},{"size":2269,"mtime":1610719963703,"results":"22","hashOfConfig":"17"},{"size":1772,"mtime":1611571844495,"results":"23","hashOfConfig":"17"},{"size":1180,"mtime":1610719963711,"results":"24","hashOfConfig":"17"},{"size":357,"mtime":1611563832808,"results":"25","hashOfConfig":"17"},{"size":4389,"mtime":1611337034661,"results":"26","hashOfConfig":"17"},{"size":1278,"mtime":1610719963703,"results":"27","hashOfConfig":"17"},{"size":4978,"mtime":1610719963703,"results":"28","hashOfConfig":"17"},{"size":682,"mtime":1611336814519,"results":"29","hashOfConfig":"17"},{"size":5871,"mtime":1611576757600,"results":"30","hashOfConfig":"17"},{"size":6631,"mtime":1611576621730,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"34"},"gxlw5a",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\App\\App.jsx",["75"],"﻿import React from 'react';\r\nimport TasksPage from '../TasksPage/TasksPage';\r\nimport Login from '../Login/Login'\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Register from '../Register/Register';\r\nimport NavBar from '../NavBar/NavBar';\r\nimport Home from '../Home/Home';\r\nimport AppFallBack from '../AppFallBack/AppFallBack'\r\nimport ForgotPassword from '../ForgotPassword/ForgotPassword';\r\nimport AppSendEmail from '../AppSendEmail/AppSendEmail';\r\nimport ResetPassword from '../ResetPassword/ResetPassword';\r\nimport '../passwordSH.scss';\r\n const App = () => {\r\n     return <div>\r\n         <NavBar />\r\n         <Switch>\r\n             <Route exact path=\"/\" component={Home} />\r\n             <Route exact path=\"/tasks\" component={TasksPage}/>\r\n             <Route exact path=\"/signup\" component={Register} />\r\n             <Route exact path=\"/signin\" component={Login} />\r\n             <Route exact path=\"/forgot\" component ={ForgotPassword} />\r\n             <Route exact path =\"/succesEmailSend:email\" component ={AppSendEmail} />\r\n             <Route path=\"/reset\" component ={ResetPassword} />\r\n             <Route path='*' exact component={AppFallBack} />\r\n         </Switch>\r\n       \r\n         </div>\r\n}\r\nexport default App;","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\Register\\Register.jsx",["76"],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\Home\\Home.jsx",["77"],"﻿import React from 'react';\r\nimport './Home.scss';\r\nimport Student from '../../assets/img/student.svg';\r\nimport Woman from '../../assets/img/woman.svg';\r\nimport WorkPanel from '../../assets/img/workpanel.svg';\r\nimport LikeMan from '../../assets/img/likeman.svg';\r\n\r\n\r\nconst Home = () => {\r\n    return <div>     \r\n        <div className=\"text-xs-center homeMainBlock block\">\r\n            <h1> Что это такое? </h1>\r\n            <p>В современном мире с каждым днем становится все больше задач. Отличный интсрумент тайм-менеджмента - метод pomodoro</p>\r\n            <img src={Student} className=\"img-rounded homeMainImg\" alt=\"...\" />\r\n\r\n            <h4>Это приложение поможет правильно использовать технику помидора, посдкажет время, когда лучше сделать перерыв, или сконцентрироваться над задачей  </h4>\r\n            <a href='/tasks'> Перейти к задачам! </a>\r\n        </div>\r\n\r\n        <div className=\"text-xs-center homeMainBlock block\">\r\n            <h1> Как работать с этой техникой? </h1>\r\n            <p>Суть техники помидора — в таймере на определенное время. Пока таймер ведёт обтратный отсчет, нужно сконцентрироваться на задаче и не отвлекаться на другие дела. Классически, это 25 минут, после этого — перерыв в 5 минут</p>\r\n            <p>Создайте задачу, указав количество минут, которые можно на нее потратить. Запустите таймер</p>\r\n            <img src={Woman} className=\"img-rounded homeMainImg\" alt=\"...\" />\r\n\r\n            <h4>Приложение само разобьет задачу на временные промежутки, напомнит о перерыве или старте нового периода</h4>\r\n            <a href='/tasks'> Начать! </a>\r\n        </div>\r\n\r\n        <div className=\"text-xs-center homeMainBlock block\">\r\n            <h1> Советы при работе! </h1>\r\n            <li>Ставьте конкретные задачи. Лучше, если они записаны и видны перед глазами </li>\r\n            <li>Задачи можно хранить прямо здесь </li>\r\n            <li>Подключите уведомления в телеграмм, это очень удобно </li>\r\n            <img src={WorkPanel} className=\"img-rounded homeMainImg right\" alt=\"...\" />\r\n           \r\n            <li> Не забывайте отдыхать - это главная ошибка при работе с техникой помидора </li>\r\n            <li> Если что-то пошло не по плану, помидор можно поставить на паузу </li>\r\n            <li> Создав задачу, не забудьте ее запустить </li>\r\n              <h4> Приложение можно использовать и как простой ToDo лист</h4>\r\n            <a href='/tasks'> Создать свою первую задачу! </a>\r\n        </div>\r\n\r\n        <div className=\"text-xs-center homeMainBlock block\">\r\n            <h1>Это эффективно! </h1>\r\n            <h4><i className=\"fas fa-lightbulb\"/> абсолютно бесплатно </h4>\r\n            <p>Попробуйте использовать технику в течение дня. Результат будет впечатляющий!</p>\r\n            <img src={LikeMan} className=\"img-rounded homeMainImg right\" alt=\"...\" />\r\n            <h4> Главное  — это соблюдение таймера, приложение отлично поможет справиться с этим.</h4>\r\n\r\n           \r\n            <a href='/tasks'>Попробовать технику помидора</a>\r\n        </div>\r\n\r\n        <div className=\"footer\">\r\n            <p> © Denis Cherniy 2020  </p>\r\n             <p>  mosavia.dc@gmail.com </p>\r\n        </div>\r\n        \r\n\r\n\r\n    </div>\r\n\r\n}\r\n\r\nexport default Home;",["78","79"],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\index.js",[],["80","81"],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\ForgotPassword\\ForgotPassword.jsx",[],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\NavBar\\NavBar.jsx",["82","83"],"﻿import React, { useState, useEffect } from \"react\";\r\nimport AuthService from '../../services/authservice'\r\nimport TaskPage from '../TasksPage/TasksPage'\r\nimport { Link } from 'react-router-dom';\r\nimport './NavBar.scss';\r\nconst NavBar = () => {\r\n    const [currentUser, setCurrentUser] = useState(undefined);\r\n    useEffect(() => {\r\n        const user = AuthService.getCurrentUser();\r\n\r\n        if (user) {\r\n            setCurrentUser(user);\r\n        }\r\n    }, []);\r\n\r\n    const logOut =()=>{\r\n        AuthService.logout();\r\n        window.location.reload();\r\n    }\r\n\r\n    return <div>\r\n        <nav className=\"navbar navbar-expand navbar-light bg-light\">\r\n            <Link to={\"/\"} className=\"navbar-brand\">\r\n                Помидор\r\n            </Link>\r\n            <div className=\"navbar-nav mr-auto\">\r\n              \r\n\r\n              \r\n\r\n               \r\n\r\n             \r\n\r\n            {currentUser ? (\r\n                <div className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                            <Link to={\"/tasks\"} id =\"userName\" className=\"nav-link\">\r\n                               {currentUser.firstName}\r\n                        </Link>\r\n                        </li>\r\n                   \r\n\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link to={\"/signin\"} id=\"userName\" className=\"nav-link\" onClick={logOut}>\r\n                                Выйти\r\n                            </Link>\r\n                         \r\n \r\n                    </li>\r\n                </div>\r\n                ) :\r\n                (\r\n                    <div className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to={\"/signin\"} className=\"nav-link\">\r\n                              Войти\r\n              </Link>\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <Link to={\"/signup\"} className=\"nav-link\">\r\n                                Регистрация\r\n                        </Link>\r\n                        </li>\r\n                    </div>\r\n                )}\r\n      \r\n            </div>\r\n         </nav>  \r\n    </div>\r\n     \r\n\r\n}\r\nexport default NavBar;",["84","85"],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\services\\authservice.js",["86","87"],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\services\\tasksservice.js",["88"],"import axios from 'axios';\r\nimport AuthService from './authservice'\r\n\r\nconst backurl = \"https://pomodorotodotracker.herokuapp.com/tasks\";\r\nconst headers = {\r\n    \"Authorization\": \"Bearer \" + AuthService.getAuthToken(),\r\n    'Content-Type': 'application/json'\r\n}\r\n\r\nconst GetTasks = () => {\r\n\r\n\r\n    return axios.get(backurl, {\r\n        headers: headers\r\n    }).then((response) => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\nconst UpdateTaskStatus = (task) => {\r\n    return axios.put(backurl +'/updatestatus', task,{\r\n        headers: headers,\r\n       \r\n    });\r\n}\r\n\r\nconst DeleteTask = (id) => {                       \r\n \r\n    return axios.delete(backurl + '/delete/' + id, {\r\n        headers: headers\r\n    });\r\n}\r\n\r\n\r\n\r\nconst AddTask = (taskName, taskTime, taskDescription = '��� ��������') => {\r\n\r\n    const task = {\r\n        taskName: taskName,\r\n        taskTime: taskTime,\r\n        taskDescription: taskDescription\r\n    }\r\n    return axios.post(backurl + '/addtask', task,{\r\n       headers:headers\r\n  \r\n\r\n    }).then((response) => {\r\n        return response.data;\r\n    });\r\n};\r\n\r\n\r\nexport default {\r\n    GetTasks,\r\n    AddTask,\r\n    DeleteTask,\r\n    UpdateTaskStatus\r\n}\r\n","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AppSendEmail\\AppSendEmail.jsx",[],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\TasksPage\\TasksPage.jsx",["89"],"﻿import React, { useState } from 'react';\r\n\r\nimport './TasksPage.scss';\r\n\r\n\r\nimport UserTaskItem from '../UserTaskItem/UserTaskItem';\r\nimport AddTask from '../AddTask/AddTask';\r\nimport TasksService from '../../services/tasksservice';\r\nimport AuthService from '../../services/authservice';\r\nimport AddTaskForm from '../AddTaskForm/AddTaskForm';\r\nimport Image from '../../assets/img/graph-man.svg';\r\nimport { useEffect } from 'react';\r\n\r\nconst TasksPage = (isLogin) => {\r\n    const [tasks, updateTasks] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [isEntered, setIsEntered] = useState(false);\r\n    const [telegramUserName, setTelegramUserName] = useState(null);\r\n    document.title = \"Задачи\";\r\n\r\n    const GetTasks = () => {\r\n\r\n        setLoading(true);\r\n        TasksService.GetTasks().then(\r\n            (response) => {\r\n                updateTasks(response);\r\n               \r\n                setLoading(false)\r\n            }, (error) => {\r\n                console.log(error);\r\n                setLoading(false)\r\n            },\r\n        \r\n        );\r\n       \r\n     \r\n    }\r\n    useEffect(() => {\r\n        const user = AuthService.getCurrentUser();\r\n\r\n        if (user) {\r\n            setIsEntered(true);\r\n            GetTasks();\r\n\r\n            if (user.telegramUserName) {\r\n                setTelegramUserName(user.telegramUserName);\r\n            }\r\n            const interval = setInterval(() => {\r\n                TasksService.GetTasks().then(\r\n                    (response) => {\r\n                        updateTasks(response);\r\n                    }, (error) => {\r\n                        console.log(error.response);\r\n                    },\r\n                );\r\n\r\n            }, 1500);\r\n            return () => clearInterval(interval);\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    },[])\r\n\r\n\r\n\r\n\r\n\r\n    return <div className=\"container-fluid TasksPage\">\r\n        {!telegramUserName && (\r\n            <p> <i className=\"fas fa-lightbulb\"></i> Можно добавить уведомления в телеграмме, <a className=\"telegramLink\" href=\"https://t.me/PomodoroReminder_bot\"> @PomodoroReminder_bot</a>  </p>\r\n        )}\r\n        {telegramUserName && (\r\n            <p> <i className=\"fas fa-lightbulb\"></i> Подключен telegram @{telegramUserName} </p>\r\n        )}\r\n        {loading && (\r\n            <div className=\"loading-container\">\r\n                <div className=\"yellow\"></div>\r\n                <div className=\"red\"></div>\r\n                <div className=\"blue\"></div>\r\n                <div className=\"violet\"></div>\r\n            </div>   \r\n            \r\n        )\r\n        }\r\n        {tasks.length ===0 && !loading && isEntered && (\r\n             <div>\r\n            <div id=\"UserTasks\" >\r\n                <h1>Еще нет задач</h1>\r\n                <img alt=\"noTasksImg\" className=\"noTasksImg\" src={Image}/>\r\n                <p>Сосредоточьтесь на своем дне</p>\r\n                <p>Коснитесь кнопки ниже, чтобы создать свою первую задачу!</p>\r\n               \r\n                </div>\r\n                <AddTask FirstTask />\r\n             </div>\r\n        )\r\n        }\r\n        {!isEntered && (\r\n            <div id=\"UserTasks\" >\r\n                <h1>Еще нет задач</h1>\r\n                <img alt='noTasksImg' className=\"noTasksImg\" src={Image} />\r\n                <p>Сосредоточьтесь на своем дне</p>\r\n                <p>Зарегистрируйтесь и создайте свою первую задачу!</p>\r\n                <a href=\"/signup\"> Регистрация </a>  или <a href=\"/signin\"> Вход в аккаунт  </a>       \r\n\r\n            </div>\r\n         )}\r\n\r\n\r\n        {tasks.length > 0 && !loading && (\r\n\r\n\r\n            <div>\r\n                <div id=\"UserTasks\">\r\n                    Количество задач :{tasks.length}\r\n                    {tasks.length > 0 && (\r\n                        tasks.map(task =>\r\n                            <UserTaskItem key={task.id} task={task}\r\n\r\n                            />\r\n                        ))\r\n\r\n\r\n\r\n                    }\r\n\r\n\r\n                </div>\r\n                <AddTask FirstTask={false} />\r\n            </div>\r\n      \r\n\r\n\r\n        )}\r\n\r\n        <AddTaskForm />\r\n    \r\n        </div>\r\n}\r\n\r\nexport default TasksPage;","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AddTask\\AddTask.jsx",["90","91","92"],"﻿import './AddTask.scss';\r\nimport React from 'react';\r\nimport AuthService from '../../services/authservice';\r\nimport { useState } from 'react';\r\n\r\n//Отвечает за открытие/закрытие форм\r\nconst AddTask = (FirstTask) => {\r\n\r\n\r\n\r\n    const AddButtonClick = (e) => {\r\n        let addbtns = [null];\r\n\r\n        addbtns = Array.from(document.getElementsByClassName('btn-lg'));\r\n        addbtns.forEach(i => i.style.cssText = \"display:none\");\r\n        document.getElementById('addForm').style.cssText = \"display:block\";\r\n        document.getElementById('UserTasks').style.cssText = \"display:none\";     // Скрываем список задач\r\n        \r\n\r\n    \r\n\r\n    };\r\n\r\n\r\n  \r\n    return <div>\r\n     \r\n        {FirstTask.FirstTask &&(\r\n        <div>\r\n            <button type=\"button\" className=\"btn btn-success btn-lg\" onClick={AddButtonClick}>Добавить первую задачу</button>\r\n             </div>\r\n        \r\n            )}\r\n        {!FirstTask.FirstTask && (\r\n            <div>\r\n                <button type=\"button\" className=\"btn btn-light btn-lg fixed-bottom\" onClick={AddButtonClick}> + Добавить задачу</button>\r\n            </div>\r\n                  \r\n        )}\r\n\r\n\r\n    </div>\r\n\r\n\r\n}\r\nexport default AddTask;",["93","94"],"D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AddTaskForm\\AddTaskForm.jsx",["95"],"﻿import React, { useState,useRef} from 'react';\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport TaskService from \"../../services/tasksservice\"\r\nimport './AddTaskForm.scss';\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Это поле обязательно!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst AddTaskForm = () => {\r\n\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n    const [taskName, setTaskName] = useState('');\r\n    const [taskTime, setTaskTime] = useState(25);\r\n    const [taskDescription, setTaskDescription] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeTaskName=((e) => {\r\n        setTaskName(e.target.value);\r\n    });\r\n\r\n    const onChangeTaskTime =((e) => {\r\n        setTaskTime(e.target.value);\r\n    });\r\n\r\n    const onChangeTaskDescription = ((e) => {\r\n        setTaskDescription(e.target.value);\r\n    });\r\n       \r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n      \r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            let testmessage = \"\";\r\n            setLoading(true);\r\n            TaskService.AddTask(taskName, taskTime, taskDescription).then(\r\n                () => {\r\n                    window.location.reload();\r\n                    setLoading(false);\r\n                },\r\n                (error) => {\r\n                    console.debug(error.response);\r\n                    testmessage = error.toString();\r\n                    setLoading(false);\r\n                });\r\n\r\n            setMessage(testmessage);\r\n        }\r\n        else {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const onCloseButtonClick = (e) => {\r\n    document.getElementById('addForm').style.cssText = 'display:none';\r\n    let addbtns = [null];\r\n    addbtns = Array.from(document.getElementsByClassName('btn-lg'));\r\n    addbtns.forEach(i => i.style.cssText = \"display:inline-flex\");\r\n\r\n    document.getElementById('UserTasks').style.cssText = \"display:block\";     // Скрываем список задач\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return <div id=\"addForm\">\r\n        <i className=\"fas fa-times fa-lg closeButton \" onClick={onCloseButtonClick}></i>  \r\n\r\n        <Form onSubmit={handleLogin} ref={form}>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"taskName\">Название</label>\r\n                <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"taskName\"\r\n                    value={taskName}\r\n                    placeholder=\"Улучшить этот мир\"\r\n                    onChange={onChangeTaskName}\r\n                    validations={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"taskTime\">Примерное количество минут на задачу</label>\r\n                <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"taskTime\"\r\n                    value={taskTime}\r\n                    onChange={onChangeTaskTime}\r\n                    validations={[required]}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"taskDescription\">Описание</label>\r\n                <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"необязательно\"\r\n                    name=\"taskDescription\"\r\n                    value={taskDescription}\r\n                    onChange={onChangeTaskDescription}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <button className=\"btn btn-primary\" disabled={loading}>\r\n                  \r\n                    <span>Добавить задачу</span>\r\n                </button>\r\n                {loading && (\r\n                    <div className=\"loading-container\">\r\n                        <div className=\"yellow\"></div>\r\n                        <div className=\"red\"></div>\r\n                        <div className=\"blue\"></div>\r\n                        <div className=\"violet\"></div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {message && (\r\n                <div className=\"form-group\">\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        {message}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n        </Form>\r\n\r\n\r\n        </div>\r\n\r\n\r\n}\r\n\r\nexport default AddTaskForm;","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\AppFallBack\\AppFallBack.jsx",["96"],"﻿import React from 'react';\r\nimport './AppFallBack.scss';\r\nimport Image from '../../assets/img/404.svg';\r\n\r\nconst AppFallBack = () => {\r\n\r\n\r\n    return <div className=\"notFound\">\r\n        <h1> Ошибка 404</h1>\r\n        <h2>Вы зашли на темную сторону, тут происходят страшные вещи</h2>\r\n        <img src={Image} alt='404' className=\"notFoundImg\"/>\r\n        <h1> <a href=\"/\">Вам лучше вернуться на светлую сторону </a>   </h1>\r\n\r\n        <h2> <a href=\"/signin\">Войти</a> или <a href=\"/signup\"> Зарегистрироваться </a>   </h2>\r\n\r\n    </div>\r\n}\r\nexport default AppFallBack;","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\Login\\Login.jsx",["97"],"﻿import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport './Login.scss';\r\nimport AuthService from \"../../services/authservice\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Это поле обязательно!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Login = (props) => {\r\n    document.title = \"Войти\"\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    };\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n    };\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        setMessage(\"\");\r\n        setLoading(true);\r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            AuthService.login(username, password).then(\r\n                (r) => {\r\n                    props.history.push(\"/tasks\");\r\n                    window.location.reload();\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    let resMessage = ''\r\n                    if (error.response.status === 404) {\r\n                        resMessage = \"Ошибка 404: e-mail не найден\";\r\n                    }\r\n                    else if (error.response.status === 500) {\r\n                        resMessage = \"Ошибка 500: проверьте интернет\";\r\n                    }\r\n                    else if (error.response.status === 400) {\r\n                        resMessage = \"Ошибка 400: неверный пароль\";\r\n                    }\r\n\r\n                    else resMessage = error.toString();\r\n                    setLoading(false);\r\n                    setMessage(resMessage);\r\n                }\r\n            );\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    };\r\n\r\n    const showPass = (e)=>{\r\n        let show = e.target;\r\n        show.style.cssText=\"display:none\";\r\n        let hide = document.getElementById('hidePass');\r\n        hide.style.cssText=\"display:inline\";\r\n        let t = document.getElementById(\"password\");\r\n        t.classList.add(\"view\");\r\n        t.setAttribute('type','text');\r\n    }\r\n    const hidePass =(e)=>{\r\n        let hide = e.target;\r\n        hide.style.cssText=\"display:none\";\r\n        let show = document.getElementById('showPass');\r\n        show.style.cssText=\"display:inline\";\r\n        let t = document.getElementById(\"password\");\r\n        t.classList.add(\"view\");\r\n        t.setAttribute('type','password');\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n\r\n\r\n                <Form onSubmit={handleLogin} ref={form}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Email</label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={onChangeUsername}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Пароль</label>\r\n                        <Input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={onChangePassword}\r\n                            validations={[required]}\r\n                        />\r\n                         <label id =\"showPass\" onClick={showPass}>Показать пароль</label>\r\n                        <label id=\"hidePass\" onClick={hidePass}>Скрыть пароль</label>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary\" disabled={loading}>\r\n                            {loading && (\r\n                                <div className=\"loading-container\">\r\n                                    <div className=\"yellow\"></div>\r\n                                    <div className=\"red\"></div>\r\n                                    <div className=\"blue\"></div>\r\n                                    <div className=\"violet\"></div>\r\n                                </div>   \r\n                            )}\r\n                            <span>Полетели</span>\r\n                        </button>\r\n                    </div>\r\n\r\n                    {message && (\r\n                        <div className=\"form-group\">\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {message}\r\n                                <p><a className=\"forgotlink\" href='/forgot'>Сбросить пароль</a>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","D:\\mosaviaDC\\PomodoroTracker\\pomodorotest\\src\\components\\ResetPassword\\ResetPassword.jsx",[],{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","messageId":"101","fix":"102"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","messageId":"101","fix":"103"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","messageId":"101","fix":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"105","replacedBy":"109"},{"ruleId":"107","replacedBy":"110"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","messageId":"101","fix":"111"},{"ruleId":"112","severity":1,"message":"113","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":16},{"ruleId":"105","replacedBy":"116"},{"ruleId":"107","replacedBy":"117"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","messageId":"101","fix":"118"},{"ruleId":"119","severity":1,"message":"120","line":99,"column":1,"nodeType":"121","endLine":107,"endColumn":2},{"ruleId":"119","severity":1,"message":"120","line":53,"column":1,"nodeType":"121","endLine":58,"endColumn":2},{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","messageId":"101","fix":"122"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","messageId":"101","fix":"123"},{"ruleId":"112","severity":1,"message":"124","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":19},{"ruleId":"112","severity":1,"message":"125","line":4,"column":10,"nodeType":"114","messageId":"115","endLine":4,"endColumn":18},{"ruleId":"105","replacedBy":"126"},{"ruleId":"107","replacedBy":"127"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","messageId":"101","fix":"128"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","messageId":"101","fix":"129"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":1,"nodeType":"100","messageId":"101","fix":"130"},"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"131","text":"132"},{"range":"133","text":"132"},{"range":"134","text":"132"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],{"range":"137","text":"132"},"no-unused-vars","'TaskPage' is defined but never used.","Identifier","unusedVar",["135"],["136"],{"range":"138","text":"132"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"range":"139","text":"132"},{"range":"140","text":"132"},"'AuthService' is defined but never used.","'useState' is defined but never used.",["135"],["136"],{"range":"141","text":"132"},{"range":"142","text":"132"},{"range":"143","text":"132"},[-1,0],"",[-1,0],[-1,0],"no-global-assign","no-unsafe-negation",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]