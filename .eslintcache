[{"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\index.js":"1","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\AddTaskForm\\AddTaskForm.jsx":"2","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\services\\authservice.js":"3","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\AddTask\\AddTask.jsx":"4","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\App\\App.jsx":"5","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\TasksPage\\TasksPage.jsx":"6","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\Login\\Login.jsx":"7","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\Register\\Register.jsx":"8","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\services\\tasksservice.js":"9","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\UserTaskItem\\UserTaskItem.jsx":"10","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\NavBar\\NavBar.jsx":"11","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\Home\\Home.jsx":"12","D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\AppFallBack\\AppFallBack.jsx":"13"},{"size":291,"mtime":1606656254292,"results":"14","hashOfConfig":"15"},{"size":4974,"mtime":1606859797675,"results":"16","hashOfConfig":"15"},{"size":1395,"mtime":1606934539157,"results":"17","hashOfConfig":"15"},{"size":1278,"mtime":1606816151928,"results":"18","hashOfConfig":"15"},{"size":809,"mtime":1606934024552,"results":"19","hashOfConfig":"15"},{"size":4363,"mtime":1606934428016,"results":"20","hashOfConfig":"15"},{"size":4768,"mtime":1606833845371,"results":"21","hashOfConfig":"15"},{"size":5510,"mtime":1606823679685,"results":"22","hashOfConfig":"15"},{"size":1180,"mtime":1606934542744,"results":"23","hashOfConfig":"15"},{"size":4784,"mtime":1606861942118,"results":"24","hashOfConfig":"15"},{"size":2269,"mtime":1606934252416,"results":"25","hashOfConfig":"15"},{"size":4444,"mtime":1606933800362,"results":"26","hashOfConfig":"15"},{"size":672,"mtime":1606934014801,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"pzgbog",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\index.js",[],["61","62"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\AddTaskForm\\AddTaskForm.jsx",["63"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\services\\authservice.js",["64","65"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\AddTask\\AddTask.jsx",["66","67","68"],"﻿import './AddTask.scss';\r\nimport React from 'react';\r\nimport AuthService from '../../services/authservice';\r\nimport { useState } from 'react';\r\n\r\n//Отвечает за открытие/закрытие форм\r\nconst AddTask = (FirstTask) => {\r\n\r\n\r\n\r\n    const AddButtonClick = (e) => {\r\n        let addbtns = [null];\r\n\r\n        addbtns = Array.from(document.getElementsByClassName('btn-lg'));\r\n        addbtns.forEach(i => i.style.cssText = \"display:none\");\r\n        document.getElementById('addForm').style.cssText = \"display:block\";\r\n        document.getElementById('UserTasks').style.cssText = \"display:none\";     // Скрываем список задач\r\n        \r\n\r\n    \r\n\r\n    };\r\n\r\n\r\n  \r\n    return <div>\r\n     \r\n        {FirstTask.FirstTask &&(\r\n        <div>\r\n            <button type=\"button\" className=\"btn btn-success btn-lg\" onClick={AddButtonClick}>Добавить первую задачу</button>\r\n             </div>\r\n        \r\n            )}\r\n        {!FirstTask.FirstTask && (\r\n            <div>\r\n                <button type=\"button\" className=\"btn btn-light btn-lg fixed-bottom\" onClick={AddButtonClick}> + Добавить задачу</button>\r\n            </div>\r\n                  \r\n        )}\r\n\r\n\r\n    </div>\r\n\r\n\r\n}\r\nexport default AddTask;",["69","70"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\App\\App.jsx",["71","72"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\TasksPage\\TasksPage.jsx",["73","74","75"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\Login\\Login.jsx",["76"],"﻿import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport './Login.scss';\r\nimport AuthService from \"../../services/authservice\";\r\n\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Это поле обязательно!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Login = (props) => {\r\n    document.title = \"Войти\"\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    };\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n    };\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        setMessage(\"\");\r\n        setLoading(true);\r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            AuthService.login(username, password).then(\r\n                (r) => {\r\n                    props.history.push(\"/tasks\");\r\n                    window.location.reload();\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    let resMessage = ''\r\n                    if (error.response.status === 404) {\r\n                        resMessage = \"Ошибка 404: e-mail не найден\";\r\n                    }\r\n                    else if (error.response.status === 500) {\r\n                        resMessage = \"Ошибка 500: проверьте интернет\";\r\n                    }\r\n                    else if (error.response.status === 400) {\r\n                        resMessage = \"Ошибка 400: неверный пароль\";\r\n                    }\r\n\r\n                    else resMessage = error.toString();\r\n                    setLoading(false);\r\n                    setMessage(resMessage);\r\n                }\r\n            );\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n\r\n\r\n                <Form onSubmit={handleLogin} ref={form}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Email</label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={onChangeUsername}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Пароль</label>\r\n                        <Input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={onChangePassword}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary\" disabled={loading}>\r\n                            {loading && (\r\n                                <div className=\"loading-container\">\r\n                                    <div className=\"yellow\"></div>\r\n                                    <div className=\"red\"></div>\r\n                                    <div className=\"blue\"></div>\r\n                                    <div className=\"violet\"></div>\r\n                                </div>   \r\n                            )}\r\n                            <span>Войти</span>\r\n                        </button>\r\n                    </div>\r\n\r\n                    {message && (\r\n                        <div className=\"form-group\">\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n",["77","78"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\Register\\Register.jsx",["79","80"],"﻿import React, { useState, useRef } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../../services/authservice\";\r\nimport { Redirect } from 'react-router-dom';\r\nconst required = (value) => {\r\n    if (!value) {\r\n        return (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n                Это поле обязательно!\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nconst Register = (props) => {\r\n    document.title = \"Регистрация\"\r\n    const form = useRef();\r\n    const checkBtn = useRef();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    const onChangeUsername = (e) => {\r\n        const username = e.target.value;\r\n        setUsername(username);\r\n    };\r\n    const onChangeFirstName = (e) => {\r\n        const firstName = e.target.value;\r\n        setFirstName(firstName);\r\n    }\r\n\r\n    const onChangePassword = (e) => {\r\n        const password = e.target.value;\r\n        setPassword(password);\r\n    };\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        setMessage(\"\");\r\n        setLoading(true);\r\n\r\n        form.current.validateAll();\r\n\r\n        if (checkBtn.current.context._errors.length === 0) {\r\n            AuthService.register(username,firstName,password).then(\r\n                () => {\r\n\r\n                    props.history.push(\"/tasks\");\r\n                    window.location.reload();\r\n        \r\n                },\r\n                (error) => {\r\n                    let resMessage = ''\r\n                    if (error.response.status === 409) {\r\n                        resMessage = \"Ошибка 409: такой e-mail уже найден\";\r\n                    }\r\n                    else if (error.response.status === 500) {\r\n                        resMessage = \"Ошибка 500: проверьте интернет\";\r\n                    }\r\n                    else if (error.response.status === 400) {\r\n                        resMessage = \"Ошибка 400: форма заполнена неверно\";\r\n                    }\r\n\r\n                    else resMessage = error.toString();\r\n                    setLoading(false);\r\n                    setMessage(resMessage);\r\n                }\r\n            );\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"col-md-12\">\r\n            <div className=\"card card-container\">\r\n\r\n\r\n                <Form onSubmit={handleLogin} ref={form}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Email</label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={username}\r\n                            onChange={onChangeUsername}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Имя</label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            name=\"username\"\r\n                            value={firstName}\r\n                            onChange={onChangeFirstName}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">Пароль</label>\r\n                        <Input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            name=\"password\"\r\n                            value={password}\r\n                            onChange={onChangePassword}\r\n                            validations={[required]}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary\" disabled={loading}>\r\n                            {loading && (\r\n                                <div className=\"loading-container\">\r\n                                    <div className=\"yellow\"></div>\r\n                                    <div className=\"red\"></div>\r\n                                    <div className=\"blue\"></div>\r\n                                    <div className=\"violet\"></div>\r\n                                </div>   \r\n                            )}\r\n                            <span>Регистрация</span>\r\n                        </button>\r\n                    </div>\r\n\r\n                    {message && (\r\n                        <div className=\"form-group\">\r\n                            <div className=\"alert alert-danger\" role=\"alert\">\r\n                                {message}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;\r\n",["81","82"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\services\\tasksservice.js",["83"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\UserTaskItem\\UserTaskItem.jsx",["84","85"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\NavBar\\NavBar.jsx",["86","87"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\Home\\Home.jsx",["88"],"D:\\Работа это work\\mosaviaD.C\\Front-End PomodoroApp\\clientapp\\src\\components\\AppFallBack\\AppFallBack.jsx",["89","90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","messageId":"98","fix":"99"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","messageId":"98","fix":"100"},{"ruleId":"101","severity":1,"message":"102","line":67,"column":1,"nodeType":"103","endLine":73,"endColumn":2},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","messageId":"98","fix":"104"},{"ruleId":"105","severity":1,"message":"106","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":19},{"ruleId":"105","severity":1,"message":"109","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":18},{"ruleId":"91","replacedBy":"110"},{"ruleId":"93","replacedBy":"111"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","messageId":"98","fix":"112"},{"ruleId":"105","severity":1,"message":"113","line":4,"column":25,"nodeType":"107","messageId":"108","endLine":4,"endColumn":29},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","messageId":"98","fix":"114"},{"ruleId":"115","severity":1,"message":"116","line":101,"column":17,"nodeType":"117","endLine":101,"endColumn":59},{"ruleId":"115","severity":1,"message":"116","line":113,"column":17,"nodeType":"117","endLine":113,"endColumn":59},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","messageId":"98","fix":"118"},{"ruleId":"91","replacedBy":"119"},{"ruleId":"93","replacedBy":"120"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","messageId":"98","fix":"121"},{"ruleId":"105","severity":1,"message":"122","line":7,"column":10,"nodeType":"107","messageId":"108","endLine":7,"endColumn":18},{"ruleId":"91","replacedBy":"123"},{"ruleId":"93","replacedBy":"124"},{"ruleId":"101","severity":1,"message":"102","line":53,"column":1,"nodeType":"103","endLine":58,"endColumn":2},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","messageId":"98","fix":"125"},{"ruleId":"115","severity":1,"message":"116","line":96,"column":13,"nodeType":"117","endLine":96,"endColumn":48},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","messageId":"98","fix":"126"},{"ruleId":"105","severity":1,"message":"127","line":3,"column":8,"nodeType":"107","messageId":"108","endLine":3,"endColumn":16},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","messageId":"98","fix":"128"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","messageId":"98","fix":"129"},{"ruleId":"115","severity":1,"message":"116","line":11,"column":9,"nodeType":"117","endLine":11,"endColumn":51},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"132","text":"133"},{"range":"134","text":"133"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"range":"135","text":"133"},"no-unused-vars","'AuthService' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["130"],["131"],{"range":"136","text":"133"},"'Link' is defined but never used.",{"range":"137","text":"133"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"range":"138","text":"133"},["130"],["131"],{"range":"139","text":"133"},"'Redirect' is defined but never used.",["130"],["131"],{"range":"140","text":"133"},{"range":"141","text":"133"},"'TaskPage' is defined but never used.",{"range":"142","text":"133"},{"range":"143","text":"133"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0]]